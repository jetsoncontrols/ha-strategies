class e{constructor(){}async render(e){throw new Error("Method 'render' must be implemented.")}}class t extends e{constructor(e){super(),this.initializeViewConfig(LightView.getDefaultConfig(),e,t.getViewHeaderCardConfig())}static getDefaultConfig(){return{title:localize("light.lights"),path:"lights",icon:"mdi:lightbulb-group",subview:!1,headerCardConfiguration:{iconOn:"mdi:lightbulb",iconOff:"mdi:lightbulb-off",onService:"light.turn_on",offService:"light.turn_off"}}}}class i extends HTMLElement{static async generate(e,i){console.info("HA-STRATEGIES: Strategy options:",e);const n=new Date,o=await t.generate(i),r=new Date;return console.info("HA-STRATEGIES: Strategy generation took:",r.getTime()-n.getTime(),"ms"),{title:"Lighting Dashboard",views:[{title:"Lights",path:"lights",cards:o}]}}}customElements.define("ll-strategy-dashboard-ha-strategies",i);export{i as HaStrategies};
//# sourceMappingURL=ha-strategies.js.map
